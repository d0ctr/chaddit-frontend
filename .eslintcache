[{"/home/vlad/chaddit-frontend/src/api/api.js":"1","/home/vlad/chaddit-frontend/src/redux/reducers/userReducer.js":"2","/home/vlad/chaddit-frontend/src/components/Feed/Feed.jsx":"3","/home/vlad/chaddit-frontend/src/components/Card/Card.jsx":"4","/home/vlad/chaddit-frontend/src/components/Header/HeaderUtils/CreateThreadWidget/CreateThreadWidget.jsx":"5","/home/vlad/chaddit-frontend/src/components/ActiveCard/ActiveCard.jsx":"6","/home/vlad/chaddit-frontend/src/App.js":"7","/home/vlad/chaddit-frontend/src/redux/reducers/topicReducer.js":"8","/home/vlad/chaddit-frontend/src/redux/reducers/types.js":"9","/home/vlad/chaddit-frontend/src/commons/colors.js":"10","/home/vlad/chaddit-frontend/src/components/ActiveCard/components/Comment.jsx":"11","/home/vlad/chaddit-frontend/src/redux/reducers/threadReducer.js":"12","/home/vlad/chaddit-frontend/src/reportWebVitals.js":"13","/home/vlad/chaddit-frontend/src/hoc/PrivateRoute.jsx":"14","/home/vlad/chaddit-frontend/src/components/Header/Header.jsx":"15","/home/vlad/chaddit-frontend/src/redux/store.js":"16","/home/vlad/chaddit-frontend/src/redux/reducers/postsReducer.js":"17","/home/vlad/chaddit-frontend/src/components/Header/Logo.jsx":"18","/home/vlad/chaddit-frontend/src/components/Header/Search/Search.jsx":"19","/home/vlad/chaddit-frontend/src/utils/formatters.js":"20","/home/vlad/chaddit-frontend/src/components/Login/Login.jsx":"21","/home/vlad/chaddit-frontend/src/CONSTANTS/API_CONSTANTS.js":"22"},{"size":3082,"mtime":1608895979208,"results":"23","hashOfConfig":"24"},{"size":2424,"mtime":1608841534764,"results":"25","hashOfConfig":"24"},{"size":2387,"mtime":1608890180616,"results":"26","hashOfConfig":"24"},{"size":3400,"mtime":1608894697212,"results":"27","hashOfConfig":"24"},{"size":4721,"mtime":1608849103584,"results":"28","hashOfConfig":"24"},{"size":4490,"mtime":1608893355624,"results":"29","hashOfConfig":"24"},{"size":798,"mtime":1607179150851,"results":"30","hashOfConfig":"24"},{"size":986,"mtime":1607289512534,"results":"31","hashOfConfig":"24"},{"size":778,"mtime":1608830725592,"results":"32","hashOfConfig":"24"},{"size":598,"mtime":1608833044217,"results":"33","hashOfConfig":"24"},{"size":1560,"mtime":1608893287972,"results":"34","hashOfConfig":"24"},{"size":2077,"mtime":1608895387951,"results":"35","hashOfConfig":"24"},{"size":362,"mtime":1606227820515,"results":"36","hashOfConfig":"24"},{"size":545,"mtime":1608555931743,"results":"37","hashOfConfig":"24"},{"size":2366,"mtime":1608626693350,"results":"38","hashOfConfig":"24"},{"size":617,"mtime":1608639496647,"results":"39","hashOfConfig":"24"},{"size":1462,"mtime":1608666669506,"results":"40","hashOfConfig":"24"},{"size":11924,"mtime":1606329663359,"results":"41","hashOfConfig":"24"},{"size":1149,"mtime":1608896158044,"results":"42","hashOfConfig":"24"},{"size":753,"mtime":1608894891124,"results":"43","hashOfConfig":"24"},{"size":3325,"mtime":1607262808634,"results":"44","hashOfConfig":"24"},{"size":67,"mtime":1606836629949,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"16nmaub",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vlad/chaddit-frontend/src/api/api.js",["97","98"],"/home/vlad/chaddit-frontend/src/redux/reducers/userReducer.js",[],["99","100"],"/home/vlad/chaddit-frontend/src/components/Feed/Feed.jsx",["101","102"],"import React, {useEffect, useState} from \"react\";\nimport ReactPlayer from 'react-player';\nimport Card from \"../Card/Card\";\nimport F from \"./Feed.module.css\";\nimport {cardColorsNum} from \"../../commons/colors\";\nimport {connect, useDispatch} from 'react-redux';\nimport {fetchThreads} from \"../../redux/reducers/threadReducer\";\nimport ActiveCard from \"../ActiveCard/ActiveCard\";\nimport {colorIsLight} from \"../../utils/formatters\";\n\nconst Feed = (props) => {\n    const dispatch = useDispatch()\n    const [threads, updateThreads] = useState(props.threads);\n\n    useEffect(() => {\n        dispatch(fetchThreads())\n    }, [])\n\n    useEffect(()=> {\n\n        updateThreads(props.threads)\n    },[props.threads])\n\n    const [activeCard, setCardStatus] = useState('');\n\n    const openCard = (id) => {\n        setCardStatus(id);\n    };\n\n    const closeCard = () => {\n        setCardStatus('');\n    };\n\n    return (\n        <div className={F.feed}>\n            {/*<ReactPlayer*/}\n            {/*    url=\"https://www.youtube.com/watch?v=YFJ3W54NEJo\"*/}\n            {/*    playing*/}\n            {/*    autoplay*/}\n            {/*/>*/}\n            {threads.map((card, i) => {\n                // console.log(card)\n                const color = cardColorsNum[(parseInt(card.thread_id )% (cardColorsNum.length - 1))]\n                const cardProps = {\n                    color: `rgba(${color[0]},${color[1]},${color[2]},${color[3]})`,\n                    isColorLight: colorIsLight(...color),\n                    threadId: card.thread_id,\n                    threadTitle: card.thread_title,\n                    authorId: card.author_id,\n                    createdAt: card.created_at,\n                    preview: card.posts[0].body,\n                    cardId: i.toString(),\n                    openCard: openCard,\n                    closeCard: closeCard,\n                    image: card.image,\n                    authorName: `${card.author.user_name}#${card.author.user_tag}`\n                }\n                return <Card key={`card${i}`} {...cardProps} />\n            })}\n            {activeCard &&\n            <ActiveCard cardId={activeCard} closeActiveCard={closeCard} info={threads[parseInt(activeCard)]}/>}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    threads: state.threadData.threads,\n    isAuth: state.auth.loggedIn,\n})\n\nexport default connect(mapStateToProps)(Feed);\n","/home/vlad/chaddit-frontend/src/components/Card/Card.jsx",["103","104","105","106","107"],"/home/vlad/chaddit-frontend/src/components/Header/HeaderUtils/CreateThreadWidget/CreateThreadWidget.jsx",["108","109","110","111","112"],"import React, {useEffect, useRef, useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport C from \"./CreateThreadWidget.module.css\";\nimport {connect, useDispatch} from \"react-redux\";\nimport useClickOutside from \"../utils\";\nimport {createThread, fetchThreads} from \"../../../../redux/reducers/threadReducer\";\nimport {createTopicId, fetchTopics, setTopicId} from \"../../../../redux/reducers/topicReducer\";\n\nfunction CreateThreadWidget(props) {\n    const dispatch = useDispatch()\n\n    const [threadName, setThreadName] = useState('')\n    const [threadText, setThreadText] = useState('')\n    const [topicTitle, setTopicTitle] = useState('')\n    const [filebyteArray, setFileByteArray] = useState('')\n\n    const topics = props.topics.map( topic => ({title: topic.topic_title, id: topic.topic_id}))\n\n    useEffect(() => {\n        dispatch(fetchTopics())\n    },[])\n\n    let domNode = useClickOutside(() => {\n        props.closeCreator();\n    });\n\n    function updateThreadText(text){\n        setThreadText(text);\n    }\n\n    function updateThreadName(name){\n        setThreadName(name);\n    }\n\n    useEffect(() => {\n        console.log('create', JSON.stringify(Array.from(filebyteArray)))\n        if(threadName && threadText && props.newTopicId){\n            dispatch(createThread(props.newTopicId, {\n                thread_title: threadName,\n                image: JSON.stringify(Array.from(filebyteArray)),\n                posts: [{\n                    body: threadText,\n                }],\n            }))\n            setThreadName('');\n            setThreadText('');\n            setTopicTitle('');\n            props.closeCreator();\n        }\n    }, [props.newTopicId])\n\n    function postThread(){\n        let obj = topics.find(o => o.title === topicTitle);\n        if(obj){\n            dispatch(setTopicId(obj.id));\n        } else {\n            dispatch(createTopicId(topicTitle));\n        }\n    }\n\n    const handleSubmit = event => {\n        postThread();\n        event.preventDefault()\n    }\n\n    const transformFile = evt => {\n        let file = evt.target.files[0];\n        // let reader = new FileReader();\n        // let bytes = ''\n        // reader.onload = function(e) {\n        //     // The file's text will be printed here\n        //     console.log(e.target.result)\n        //     bytes = e.target.result\n        // };\n        // // this could be from file input or other source\n        let fileReader = new FileReader();\n\n        fileReader.readAsArrayBuffer(file);\n        fileReader.onload = function(ev) {\n            const array = new Uint8Array(ev.target.result);\n            const fileByteArray = [];\n            for (let i = 0; i < array.length; i++) {\n                fileByteArray.push(array[i]);\n            }\n            setFileByteArray(array)// here it is\n        }\n        // reader.readAsText(file);\n        // let binary = '';\n        // bytes = new Uint8Array(bytes)\n        // const length = bytes.byteLength;\n        // for(let i = 0;i < length; i++){\n        //     binary += String.fromCharCode(bytes[i]);\n        // }\n        // console.log(typeof binary)\n        setFileByteArray(file)\n\n        // let a = window.btoa(binary)\n        // console.log('puk', a)\n    }\n\n    return ReactDOM.createPortal(\n        <div\n            className={props.creatorActive ? C.darkBackground : C.darkBackgroundHidden}\n        >\n            <div ref={domNode} className={C.creatorContainer}>\n                <h1>{`Создать новый тред в теме:`}</h1>\n                <input className={C.dataList}\n                       placeholder={'Выберите тему треда'}\n                       list={'topiclist'}\n                       value={topicTitle}\n                       onChange={e => setTopicTitle(e.target.value)}/>\n                    <datalist id={'topiclist'}>\n                        {topics.map((topic, i) => <option key={`topic_item_${i}`} value={topic.title}/>)}\n                    </datalist>\n                <input className={C.inputCreator } placeholder={'Название треда'} value={threadName} onChange={ e=> updateThreadName(e.target.value)}/>\n                <input type={'file'} onChange={e => transformFile(e)}/>\n                <textarea className={C.textareaCreator } placeholder={'Сообщение'} value={threadText} onChange={ e=> updateThreadText(e.target.value)}/>\n                <button className={C.buttonCreator} onClick={postThread}>{'Отправить'}</button>\n            </div>\n        </div>,\n        document.getElementById(\"portal\")\n    );\n}\n\nconst mapStateToProps = state => ({\n    topics: state.topics.topics,\n    newTopicId: state.topics.sendTopicId,\n})\n\nexport default connect(mapStateToProps)(CreateThreadWidget);\n",["113","114"],"/home/vlad/chaddit-frontend/src/components/ActiveCard/ActiveCard.jsx",["115","116","117","118","119"],"/home/vlad/chaddit-frontend/src/App.js",[],"/home/vlad/chaddit-frontend/src/redux/reducers/topicReducer.js",[],"/home/vlad/chaddit-frontend/src/redux/reducers/types.js",[],["120","121"],"/home/vlad/chaddit-frontend/src/commons/colors.js",[],"/home/vlad/chaddit-frontend/src/components/ActiveCard/components/Comment.jsx",["122"],"/home/vlad/chaddit-frontend/src/redux/reducers/threadReducer.js",[],"/home/vlad/chaddit-frontend/src/reportWebVitals.js",[],"/home/vlad/chaddit-frontend/src/hoc/PrivateRoute.jsx",[],"/home/vlad/chaddit-frontend/src/components/Header/Header.jsx",["123","124"],"import React, {useEffect, useState} from \"react\";\nimport H from \"./Header.module.css\";\nimport Logo from \"./Logo\";\nimport Search from \"./Search/Search\";\nimport UserSettings from \"./HeaderUtils/UserSettings/UserSettings\";\nimport {connect, useDispatch} from \"react-redux\";\nimport CreateThreadWidget from \"./HeaderUtils/CreateThreadWidget/CreateThreadWidget\";\nimport common from '../../commons/elements.module.css';\nimport User from '../../icons/user.svg';\nimport {getUser} from \"../../redux/reducers/userReducer\";\n\n\nfunction Header(props) {\n    const dispatch = useDispatch()\n\n    const [settingsActive, setSettingsStatus] = useState(false);\n    const [creatorActive, setCreatorStatus] = useState(false);\n\n    useEffect(\n        () => {\n            dispatch(getUser());\n        },\n        [props.isAuth],\n    );\n\n    const openSettings = () => {\n        setSettingsStatus(true);\n    };\n\n    const closeSettings = () => {\n        setSettingsStatus(false);\n    };\n\n    const openCreator = () => {\n        setCreatorStatus(true);\n    };\n\n    const closeCreator = () => {\n        setCreatorStatus(false);\n    };\n\n    return (\n        <div className={props.isAuth ? H.header : H.headerGuest}>\n            {props.isAuth && <div className={H.utils}>\n                <div className={H.userImage} onClick={props.isAuth ? openSettings : null}/>\n                <div>{`${props.isAuth ? `Здравствуйте,  ${props.userName}` : ''}`}</div>\n                <div>Чаты</div>\n                <div className={H.userTopicCreator} onClick={props.isAuth ? openCreator : null}>\n                    <button className={common.buttonChad}> Добавить тред </button>\n\n                </div>\n            </div>}\n            <div className={H.logo}>\n                <Logo />\n            </div>\n            {props.isAuth && <div className={H.search}>\n                <Search/>\n            </div>}\n            {props.isAuth && <UserSettings\n                closeSettings={closeSettings}\n                settingsActive={settingsActive}\n            />}\n            {props.isAuth && <CreateThreadWidget\n                creatorActive={creatorActive}\n                closeCreator={closeCreator}/>}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    userName: state.user.userName,\n    isAuth: state.auth.loggedIn,\n})\n\n\nexport default connect(mapStateToProps)(Header);\n","/home/vlad/chaddit-frontend/src/redux/store.js",[],"/home/vlad/chaddit-frontend/src/redux/reducers/postsReducer.js",["125"],"import {postAPI} from \"../../api/api\";\nimport {CLEAR_POSTS, SEND_POST, SET_POSTS} from \"./types\";\n\nconst initialState = {\n    posts: [],\n}\n\nfunction updateCommentRating(posts, postId, reply) {\n\n    let temp = [...posts];\n\n    (function func(temp) {\n\n        for (let elem of temp) {\n            if (elem[\"post_id\"] == postId) {\n                elem[\"responses\"] = [...elem[\"responses\"], reply]\n            } else if (elem['responses']) {\n                func(elem['responses']);\n            }\n        }\n\n    })(temp);\n    return temp;\n}\n\nexport const postReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_POSTS:\n            return {\n                ...state,\n                posts: action.posts,\n            }\n        case SEND_POST:\n            return {\n                ...state,\n                posts: updateCommentRating(state.posts, action.parentId, action.post),\n            }\n        case CLEAR_POSTS:\n            return {\n                posts: [],\n            }\n\n        default:\n            return state;\n    }\n\n}\n\nexport const sendPost = (post, parentId) => {\n    return dispatch => {\n        postAPI.sendPost(post)\n            .then(post => dispatch({type: SEND_POST, post: post, parentId: parentId}))\n    }\n}\n\nexport const setPosts = (posts) => (dispatch) => {\n    return dispatch({type: SET_POSTS, posts: posts})\n}\n\nexport const clearPosts = () => (dispatch) => {\n    return dispatch({type: CLEAR_POSTS})\n}\n\n\n","/home/vlad/chaddit-frontend/src/components/Header/Logo.jsx",[],"/home/vlad/chaddit-frontend/src/components/Header/Search/Search.jsx",["126"],"/home/vlad/chaddit-frontend/src/utils/formatters.js",[],"/home/vlad/chaddit-frontend/src/components/Login/Login.jsx",[],"/home/vlad/chaddit-frontend/src/CONSTANTS/API_CONSTANTS.js",[],{"ruleId":"127","severity":1,"message":"128","line":13,"column":43,"nodeType":"129","messageId":"130","endLine":13,"endColumn":44},{"ruleId":"127","severity":1,"message":"128","line":13,"column":55,"nodeType":"129","messageId":"130","endLine":13,"endColumn":56},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":17,"column":8,"nodeType":"141","endLine":17,"endColumn":10,"suggestions":"142"},{"ruleId":"135","severity":1,"message":"143","line":1,"column":16,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"144","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"145","line":5,"column":9,"nodeType":"137","messageId":"138","endLine":5,"endColumn":20},{"ruleId":"135","severity":1,"message":"146","line":10,"column":9,"nodeType":"137","messageId":"138","endLine":10,"endColumn":17},{"ruleId":"135","severity":1,"message":"147","line":17,"column":9,"nodeType":"137","messageId":"138","endLine":17,"endColumn":14},{"ruleId":"135","severity":1,"message":"148","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":33},{"ruleId":"135","severity":1,"message":"149","line":6,"column":23,"nodeType":"137","messageId":"138","endLine":6,"endColumn":35},{"ruleId":"139","severity":1,"message":"140","line":21,"column":7,"nodeType":"141","endLine":21,"endColumn":9,"suggestions":"150"},{"ruleId":"139","severity":1,"message":"151","line":50,"column":8,"nodeType":"141","endLine":50,"endColumn":26,"suggestions":"152"},{"ruleId":"135","severity":1,"message":"153","line":61,"column":11,"nodeType":"137","messageId":"138","endLine":61,"endColumn":23},{"ruleId":"131","replacedBy":"154"},{"ruleId":"133","replacedBy":"155"},{"ruleId":"135","severity":1,"message":"156","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":11},{"ruleId":"135","severity":1,"message":"157","line":21,"column":12,"nodeType":"137","messageId":"138","endLine":21,"endColumn":21},{"ruleId":"139","severity":1,"message":"158","line":40,"column":8,"nodeType":"141","endLine":40,"endColumn":10,"suggestions":"159"},{"ruleId":"139","severity":1,"message":"160","line":49,"column":7,"nodeType":"141","endLine":49,"endColumn":21,"suggestions":"161"},{"ruleId":"139","severity":1,"message":"162","line":56,"column":8,"nodeType":"141","endLine":56,"endColumn":21,"suggestions":"163"},{"ruleId":"131","replacedBy":"164"},{"ruleId":"133","replacedBy":"165"},{"ruleId":"135","severity":1,"message":"166","line":5,"column":18,"nodeType":"137","messageId":"138","endLine":5,"endColumn":24},{"ruleId":"135","severity":1,"message":"167","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":12},{"ruleId":"139","severity":1,"message":"140","line":23,"column":9,"nodeType":"141","endLine":23,"endColumn":23,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":15,"column":33,"nodeType":"129","messageId":"171","endLine":15,"endColumn":35},{"ruleId":"172","severity":1,"message":"173","line":31,"column":17,"nodeType":"174","endLine":31,"endColumn":58},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'ReactPlayer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'createRef' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'authorId' is assigned a value but never used.","'image' is assigned a value but never used.","'useRef' is defined but never used.","'fetchThreads' is defined but never used.",["178"],"React Hook useEffect has missing dependencies: 'dispatch', 'filebyteArray', 'props', 'threadName', and 'threadText'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["179"],"'handleSubmit' is assigned a value but never used.",["175"],["176"],"'cat' is defined but never used.","'responses' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.cardId'. Either include them or remove the dependency array.",["180"],"React Hook useEffect has missing dependencies: 'dispatch' and 'thread'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.",["182"],["175"],["176"],"'userId' is assigned a value but never used.","'User' is defined but never used.",["183"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [dispatch]",{"range":"197","text":"198"},{"range":"199","text":"198"},"Update the dependencies array to be: [dispatch, filebyteArray, props, props.newTopicId, threadName, threadText]",{"range":"200","text":"201"},"Update the dependencies array to be: [dispatch, props.cardId]",{"range":"202","text":"203"},"Update the dependencies array to be: [dispatch, props.thread, thread]",{"range":"204","text":"205"},"Update the dependencies array to be: [posts, props.posts]",{"range":"206","text":"207"},"Update the dependencies array to be: [dispatch, props.isAuth]",{"range":"208","text":"209"},[616,618],"[dispatch]",[862,864],[1653,1671],"[dispatch, filebyteArray, props, props.newTopicId, threadName, threadText]",[1402,1404],"[dispatch, props.cardId]",[1668,1682],"[dispatch, props.thread, thread]",[1789,1802],"[posts, props.posts]",[786,800],"[dispatch, props.isAuth]"]