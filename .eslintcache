[{"/home/vlad/chaddit-frontend/src/App.js":"1","/home/vlad/chaddit-frontend/src/reportWebVitals.js":"2","/home/vlad/chaddit-frontend/src/components/Header/Header.jsx":"3","/home/vlad/chaddit-frontend/src/index.js":"4","/home/vlad/chaddit-frontend/src/components/Card/Card.jsx":"5","/home/vlad/chaddit-frontend/src/components/Feed/Feed.jsx":"6","/home/vlad/chaddit-frontend/src/components/Header/Search/Search.jsx":"7","/home/vlad/chaddit-frontend/src/commons/colors.js":"8","/home/vlad/chaddit-frontend/src/components/Header/Logo.jsx":"9","/home/vlad/chaddit-frontend/src/components/Header/HeaderUtils/UserSettings/UserSettings.jsx":"10","/home/vlad/chaddit-frontend/src/redux/store.js":"11","/home/vlad/chaddit-frontend/src/redux/reducers/types.js":"12","/home/vlad/chaddit-frontend/src/api/api.js":"13","/home/vlad/chaddit-frontend/src/utils/formatters.js":"14","/home/vlad/chaddit-frontend/src/CONSTANTS/API_CONSTANTS.js":"15","/home/vlad/chaddit-frontend/src/components/Login/Login.jsx":"16","/home/vlad/chaddit-frontend/src/redux/reducers/authReducer.js":"17","/home/vlad/chaddit-frontend/src/hoc/PrivateRoute.jsx":"18","/home/vlad/chaddit-frontend/src/redux/reducers/userReducer.js":"19","/home/vlad/chaddit-frontend/src/components/Header/HeaderUtils/utils.js":"20","/home/vlad/chaddit-frontend/src/components/Header/HeaderUtils/CreateThreadWidget/CreateThreadWidget.jsx":"21","/home/vlad/chaddit-frontend/src/redux/reducers/threadReducer.js":"22","/home/vlad/chaddit-frontend/src/redux/reducers/topicReducer.js":"23"},{"size":798,"mtime":1607179150851,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1606227820515,"results":"26","hashOfConfig":"25"},{"size":2116,"mtime":1607341562384,"results":"27","hashOfConfig":"25"},{"size":640,"mtime":1606838742610,"results":"28","hashOfConfig":"25"},{"size":1035,"mtime":1607341121225,"results":"29","hashOfConfig":"25"},{"size":1098,"mtime":1607330794248,"results":"30","hashOfConfig":"25"},{"size":565,"mtime":1607328891755,"results":"31","hashOfConfig":"25"},{"size":351,"mtime":1606330051080,"results":"32","hashOfConfig":"25"},{"size":11924,"mtime":1606329663359,"results":"33","hashOfConfig":"25"},{"size":3913,"mtime":1607257527388,"results":"34","hashOfConfig":"25"},{"size":540,"mtime":1607282771056,"results":"35","hashOfConfig":"25"},{"size":499,"mtime":1607282543144,"results":"36","hashOfConfig":"25"},{"size":2592,"mtime":1607327704824,"results":"37","hashOfConfig":"25"},{"size":273,"mtime":1606856591082,"results":"38","hashOfConfig":"25"},{"size":67,"mtime":1606836629949,"results":"39","hashOfConfig":"25"},{"size":3325,"mtime":1607262808634,"results":"40","hashOfConfig":"25"},{"size":1975,"mtime":1607177667873,"results":"41","hashOfConfig":"25"},{"size":391,"mtime":1607199741964,"results":"42","hashOfConfig":"25"},{"size":2303,"mtime":1607251671997,"results":"43","hashOfConfig":"25"},{"size":526,"mtime":1607257492708,"results":"44","hashOfConfig":"25"},{"size":3096,"mtime":1607329177821,"results":"45","hashOfConfig":"25"},{"size":1187,"mtime":1607268783226,"results":"46","hashOfConfig":"25"},{"size":986,"mtime":1607289512534,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"dc7juf",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/vlad/chaddit-frontend/src/App.js",[],["102","103"],"/home/vlad/chaddit-frontend/src/reportWebVitals.js",[],["104","105"],"/home/vlad/chaddit-frontend/src/components/Header/Header.jsx",["106"],"/home/vlad/chaddit-frontend/src/index.js",[],["107","108"],"/home/vlad/chaddit-frontend/src/components/Card/Card.jsx",[],"/home/vlad/chaddit-frontend/src/components/Feed/Feed.jsx",["109","110","111"],"/home/vlad/chaddit-frontend/src/components/Header/Search/Search.jsx",["112"],"import React from \"react\";\nimport S from \"./Search.module.css\";\nimport Icon from \"../../../icons/search.png\";\n\nfunction Search(props) {\n    return (\n        <div className={S.searchContainer}>\n            <input\n                className={S.searchInput}\n                type=\"text\"\n                placeholder=\"Что я могу для Вас найти?\"\n            />\n\n            <button type=\"submit\" class={S.searchButton}>\n                <img className={S.searchIcon} src={Icon}></img>\n            </button>\n        </div>\n    );\n}\n\nexport default Search;\n","/home/vlad/chaddit-frontend/src/commons/colors.js",[],["113","114"],"/home/vlad/chaddit-frontend/src/components/Header/Logo.jsx",[],"/home/vlad/chaddit-frontend/src/components/Header/HeaderUtils/UserSettings/UserSettings.jsx",["115","116","117","118","119","120"],"import React, { useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport U from \"./UserSettings.module.css\";\nimport showPass from \"../../../../icons/showpass.png\";\nimport {logoutActionCreator} from \"../../../../redux/reducers/authReducer\";\nimport {connect, useDispatch} from \"react-redux\";\nimport {getUser, updateUserName} from \"../../../../redux/reducers/userReducer\";\nimport useClickOutside from \"../utils\";\n\nfunction UserSettings(props) {\n    const [passView, setPassView] = useState(true)\n\n    useEffect(\n        () => {\n            dispatch(getUser());\n        },\n        [props.isAuth],\n    );\n\n    const [name, setName] = useState('')\n    const [input, setInput] = useState('')\n    const [password, setPass] = useState('')\n    const dispatch = useDispatch()\n\n    function logout(){\n        props.closeSettings();\n        dispatch(logoutActionCreator());\n    }\n\n    function setNewUserName(){\n        dispatch(updateUserName(name));\n        setName('')\n    }\n\n    let domNode = useClickOutside(() => {\n        props.closeSettings();\n        setName('');\n        setPass('')\n    });\n\n    return ReactDOM.createPortal(\n        <div\n            className={props.settingsActive ? U.darkBackground : U.darkBackgroundHidden}\n        >\n            <div ref={domNode} className={props.settingsActive ? U.settings : U.settingsHidden}>\n                <div style={{ marginTop: \"100px\" }}>Почта {props.userEmail}</div>\n                <div>\n                    <div className={U.userInputContainer}>\n                        <input\n                            className={U.userInput}\n                            type={\"text\"}\n                            placeholder={`${props.userName}#${props.userTag}`}\n                            value={name}\n                            onChange={e => setName(e.target.value)}\n                        />\n                    </div>\n                    <button className={U.userButton} onClick={setNewUserName}> Изменить имя </button>\n                </div>\n                <div>\n                    <div className={U.userInputContainer}>\n                        <input\n                            className={U.userInput}\n                            type={passView ? \"password\" : \"text\"}\n                            placeholder={\"Старый пароль\"}\n                        />\n                        <img\n                            src={showPass}\n                            height={\"30px\"}\n                            onClick={(e) => setPassView(!passView)}\n                        />\n                    </div>\n                    <div className={U.userInputContainer}>\n                        <input\n                            className={U.userInput}\n                            type={passView ? \"password\" : \"text\"}\n                            placeholder={\"Новый пароль\"}\n                        />\n                        <img\n                            src={showPass}\n                            height={\"30px\"}\n                            onClick={(e) => setPassView(!passView)}\n                        />\n                    </div>\n                    <button className={U.userButton}>Изменить пароль</button>\n                </div>\n                <div>\n                    <button className={U.userButton}>\n                        Изменить фотографию\n                    </button>\n                </div>\n                <button className={U.exitButton} onClick={e => logout()}>Выйти из аккаунта</button>\n            </div>\n        </div>,\n        document.getElementById(\"portal\")\n    );\n}\n\nconst mapStateToProps = state => ({\n    userName: state.user.userName,\n    userEmail: state.user.userEmail,\n    userTag: state.user.userTag,\n    userPass: state.user.userPass,\n    isAuth: state.auth.loggedIn,\n})\n\nexport default connect(mapStateToProps)(UserSettings);\n","/home/vlad/chaddit-frontend/src/redux/store.js",[],"/home/vlad/chaddit-frontend/src/redux/reducers/types.js",[],"/home/vlad/chaddit-frontend/src/api/api.js",[],"/home/vlad/chaddit-frontend/src/utils/formatters.js",[],"/home/vlad/chaddit-frontend/src/CONSTANTS/API_CONSTANTS.js",[],"/home/vlad/chaddit-frontend/src/components/Login/Login.jsx",[],"/home/vlad/chaddit-frontend/src/redux/reducers/authReducer.js",[],"/home/vlad/chaddit-frontend/src/hoc/PrivateRoute.jsx",[],"/home/vlad/chaddit-frontend/src/redux/reducers/userReducer.js",[],"/home/vlad/chaddit-frontend/src/components/Header/HeaderUtils/utils.js",[],"/home/vlad/chaddit-frontend/src/components/Header/HeaderUtils/CreateThreadWidget/CreateThreadWidget.jsx",["121","122","123","124"],"import React, {useEffect, useRef, useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport C from \"./CreateThreadWidget.module.css\";\nimport {connect, useDispatch} from \"react-redux\";\nimport useClickOutside from \"../utils\";\nimport {createThread, fetchThreads} from \"../../../../redux/reducers/threadReducer\";\nimport {createTopic, createTopicId, fetchTopics, setTopicId} from \"../../../../redux/reducers/topicReducer\";\n\nfunction CreateThreadWidget(props) {\n    const dispatch = useDispatch()\n\n    const [threadName, setThreadName] = useState('')\n    const [threadText, setThreadText] = useState('')\n    const [topicTitle, setTopicTitle] = useState('')\n\n    const topics = props.topics.map( topic => ({title: topic.topic_title, id: topic.topic_id}))\n\n    useEffect(() => {\n        dispatch(fetchTopics())\n    },[])\n\n    const topic = 'Python';\n\n    let domNode = useClickOutside(() => {\n        props.closeCreator();\n    });\n\n    function updateThreadText(text){\n        setThreadText(text);\n    }\n\n    function updateThreadName(name){\n        setThreadName(name);\n    }\n\n    useEffect(() => {\n        dispatch(createThread(props.newTopicId, {\n            thread_title: threadName,\n            posts: [{\n                body: threadText,\n            }],\n        }))\n        setThreadName('');\n        setThreadText('');\n        setTopicTitle('');\n        dispatch(fetchThreads());\n        props.closeCreator();\n    }, [props.newTopicId])\n\n    function postThread(){\n        let obj = topics.find(o => o.title === topicTitle);\n        if(obj){\n            dispatch(setTopicId(obj.id));\n        } else {\n            dispatch(createTopicId(topicTitle));\n        }\n    }\n\n    return ReactDOM.createPortal(\n        <div\n            className={props.creatorActive ? C.darkBackground : C.darkBackgroundHidden}\n        >\n            <div ref={domNode} className={C.creatorContainer}>\n                <h1>{`Создать новый тред в теме: ${topic}`}</h1>\n                <input className={C.dataList}\n                       placeholder={'Выберите тему треда'}\n                       list={'topiclist'}\n                       value={topicTitle}\n                       onChange={e => setTopicTitle(e.target.value)}/>\n                    <datalist id={'topiclist'}>\n                        {topics.map(topic => <option value={topic.title}/>)}\n                    </datalist>\n                <input className={C.inputCreator } placeholder={'Название треда'} value={threadName} onChange={ e=> updateThreadName(e.target.value)}/>\n                <textarea className={C.textareaCreator } placeholder={'Сообщение'} value={threadText} onChange={ e=> updateThreadText(e.target.value)}/>\n                <button className={C.buttonCreator} onClick={postThread}>{'Отправить'}</button>\n            </div>\n        </div>,\n        document.getElementById(\"portal\")\n    );\n}\n\nconst mapStateToProps = state => ({\n    topics: state.topics.topics,\n    newTopicId: state.topics.sendTopicId,\n})\n\nexport default connect(mapStateToProps)(CreateThreadWidget);\n",["125","126"],"/home/vlad/chaddit-frontend/src/redux/reducers/threadReducer.js",[],"/home/vlad/chaddit-frontend/src/redux/reducers/topicReducer.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"127","replacedBy":"137"},{"ruleId":"129","replacedBy":"138"},{"ruleId":"133","severity":1,"message":"139","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":35},{"ruleId":"133","severity":1,"message":"140","line":5,"column":31,"nodeType":"135","messageId":"136","endLine":5,"endColumn":42},{"ruleId":"141","severity":1,"message":"142","line":14,"column":8,"nodeType":"143","endLine":14,"endColumn":10,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":15,"column":17,"nodeType":"147","endLine":15,"endColumn":58},{"ruleId":"127","replacedBy":"148"},{"ruleId":"129","replacedBy":"149"},{"ruleId":"133","severity":1,"message":"150","line":1,"column":28,"nodeType":"135","messageId":"136","endLine":1,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":17,"column":9,"nodeType":"143","endLine":17,"endColumn":23,"suggestions":"151"},{"ruleId":"133","severity":1,"message":"152","line":21,"column":19,"nodeType":"135","messageId":"136","endLine":21,"endColumn":27},{"ruleId":"133","severity":1,"message":"153","line":22,"column":12,"nodeType":"135","messageId":"136","endLine":22,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":66,"column":25,"nodeType":"147","endLine":70,"endColumn":27},{"ruleId":"145","severity":1,"message":"146","line":78,"column":25,"nodeType":"147","endLine":82,"endColumn":27},{"ruleId":"133","severity":1,"message":"150","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":33},{"ruleId":"133","severity":1,"message":"154","line":7,"column":9,"nodeType":"135","messageId":"136","endLine":7,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":20,"column":7,"nodeType":"143","endLine":20,"endColumn":9,"suggestions":"155"},{"ruleId":"141","severity":1,"message":"156","line":48,"column":8,"nodeType":"143","endLine":48,"endColumn":26,"suggestions":"157"},{"ruleId":"127","replacedBy":"158"},{"ruleId":"129","replacedBy":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],["160"],["161"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["160"],["161"],"'useState' is defined but never used.","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["162"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["160"],["161"],"'useRef' is defined but never used.",["163"],"'setInput' is assigned a value but never used.","'password' is assigned a value but never used.","'createTopic' is defined but never used.",["164"],"React Hook useEffect has missing dependencies: 'dispatch', 'props', 'threadName', and 'threadText'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["165"],["160"],["161"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"166","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [dispatch]",{"range":"173","text":"174"},"Update the dependencies array to be: [dispatch, props.isAuth]",{"range":"175","text":"176"},{"range":"177","text":"174"},"Update the dependencies array to be: [dispatch, props, props.newTopicId, threadName, threadText]",{"range":"178","text":"179"},[455,457],"[dispatch]",[605,619],"[dispatch, props.isAuth]",[816,818],[1423,1441],"[dispatch, props, props.newTopicId, threadName, threadText]"]